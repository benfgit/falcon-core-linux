// ---------------------------------------------------------------------
// This file is part of falcon-core.
// 
// Copyright (C) 2015, 2016, 2017 Neuro-Electronics Research Flanders
// 
// Falcon-server is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Falcon-server is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with falcon-core. If not, see <http://www.gnu.org/licenses/>.
// ---------------------------------------------------------------------


#ifndef STREAMINFO_HPP
#define STREAMINFO_HPP

#include <limits>

const double IRREGULARSTREAM = std::numeric_limits<double>::min();

// Represents the data stream generated by an output port
class IStreamInfo {
public:
    
    double stream_rate() const;
    
    virtual bool finalized() const = 0;
    
    void Finalize( double stream_rate = IRREGULARSTREAM );
    
protected:
    double stream_rate_ = 1.0;
    bool finalized_ = false;
};

// Data type specific implementation of stream info
template <typename DATATYPE>
class StreamInfo : public IStreamInfo {
public:
    StreamInfo( DATATYPE& datatype ) : datatype_(datatype) {}
    
    DATATYPE& datatype() { return datatype_; }
    
    virtual bool finalized() const {
        
        return (finalized_ && datatype_.finalized());
    }
    
protected:
    DATATYPE datatype_; // our own copy of data type passed to constructor
};


#endif // streaminfo.hpp
